openapi: 3.0.0
info:
  title: Moj API
  version: 1.0.0
  description: Primer API-ja sa /register, /verify, /login i /logout rutama
paths:
  /register:
    get:
      summary: Registration form
      responses:
        '200':
          description: Data sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ""
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
    post:
      summary: Register user
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
          description: Username
        - in: header
          name: password
          required: true
          schema:
            type: string
          description: Password
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User successfully registered"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Resource not found"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Incorrect data"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "username"
                        message:
                          type: string
                          example: "Username already exist"
  /verify:
    post:
      summary: Verify user
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: Token
        - in: header
          name: username
          required: true
          schema:
            type: string
          description: Username
      responses:
        '200':
          description: Verification successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User verified"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized access"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Status 404"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Incorrect data"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "token"
                        message:
                          type: string
                          example: "Bad token"
  /login:
    get:
      summary: Login form
      responses:
        '200':
          description: Data sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ""
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
    post:
      summary: Login user
      parameters:
        - in: header
          name: username
          required: true
          schema:
            type: string
          description: Username
        - in: header
          name: password
          required: true
          schema:
            type: string
          description: Password
        - in: header
          name: token
          required: true
          schema: 
            type: string
          description: Token
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User logged in"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad token"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Status 404"
        '422':
          description: Incorrect input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Incorrect data"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "username"
                        message:
                          type: string
                          example: "Username is required"
  /logout:
    post:
      summary: Log out user
      responses:
        '200':
          description: Log out successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User successfully logged out"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request"
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
